name: Build e Publicacao AWS ECR
on:
    push:
        branches:
            - main
    workflow_dispatch:
jobs:
    build-and-push:
        runs-on: ubuntu-latest
        env:
            AWS_REGION: 'us-east-1'
            AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
            ECR_REPO_NAME: 'fiap-lambda'
            IMAGE_TAG: 'latest' # ou use vars.IMAGETAG se desejar
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up .NET
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: '8.0.x'

            - name: Restore dependencies
              run: dotnet restore ./AutenticacaoApi.csproj

            - name: Build
              run: dotnet build --configuration Release --no-restore

            - name: Publish
              run: dotnet publish -c Release -o ./publish

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Configure AWS credentials (use secrets ou OIDC)
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

            # Login no ECR
            - name: Log in to Amazon ECR
              uses: aws-actions/amazon-ecr-login@v2

            # Build and push para o reposit√≥rio ECR
            - name: Build and push Docker image to ECR
              uses: docker/build-push-action@v5
              with:
                context: ./
                file: ./Dockerfile
                push: true
                tags: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
